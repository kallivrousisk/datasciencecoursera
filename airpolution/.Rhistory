}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital <- function(state, outcome, num){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
validStates = unique(data[, 7])
if (!state %in% validStates){
stop("invalid state")
}
validOutcomes = c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% validOutcomes) {
stop("invalid outcome")
}
if(outcome == "heart attack") {
columnNumber = 11
}
else if (outcome == "heart failure") {
columnNumber = 17
}
else if (outcome == "pneumonia") {
columnNumber = 23
}
data[, columnNumber] <- suppressWarnings(as.numeric(data[, columnNumber]))
## Take out NA values, sort by state
data <- data[complete.cases(data[[columnNumber]]), ]
dataByState <- data[data$State==state, ]
## Sort data based on 30-day mortality rate, break ties using alphabetical order
sortedData <- dataByState[order(dataByState[[columnNumber]], dataByState$Hospital.Name,
na.last = NA), ]
## Rank data using num
if (num == "best") {
num = 1
}
else if (num == "worst") {
num = nrow(sortedData)
}
else if (is.numeric(num) && num > nrow(sortedData)) {
return(NA)
}
sortedData[num, "Hospital.Name"]
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
validOutcomes = c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% validOutcomes) {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(outcome == "heart attack") {
columnNumber = 11
}
else if (outcome == "heart failure") {
columnNumber = 17
}
else if (outcome == "pneumonia") {
columnNumber = 23
}
data[, columnNumber] <- suppressWarnings(as.numeric(data[, columnNumber]))
## Take out NA values
data <- data[complete.cases(data[[columnNumber]]), ]
##For each state, find the hospital of the specified rank
validStates = sort(unique(data[, 7]))
newLine <- character()
for(i in validStates) {
dataByState <- data[data$State==i, ]
## Sort data based on 30-day mortality rate, break ties using alphabetical order
sortedData <- dataByState[order(dataByState[[columnNumber]], dataByState$Hospital.Name,
na.last = NA), ]
## Rank data using num
temp = num
if (temp == "best") {
temp = 1
}
if (temp == "worst") {
temp = nrow(sortedData)
}
newLine[i] <- sortedData[temp, "Hospital.Name"]
}
byState <- data.frame(hospital = newLine, state = validStates, row.names = validStates)
byState
}
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
setwd("~/trainings/datasciencecoursera/airpolution")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
s1=0.00
l1=0
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data2<-data[rm, ][ , ]
data3<-data2[ ,pollutant]
s1=s1+sum(data3)
l1=l1+length(data3)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
s1=0.00
l1=0
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data2<-data[rm, ][ , ]
data3<-data2[ ,pollutant]
s1=s1+sum(data3)
l1=l1+length(data3)
}
##file1=paste("00",x,".csv",sep="")
#data<-read.csv(file1)
#data2<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
#m<-mean(data3)
#print(m)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
print(pollutant)
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
mean=s1/l1
print(mean-0.026979)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
s1=0.00
l1=0
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data2<-data[rm, ][ , ]
data3<-data2[ ,pollutant]
s1=s1+sum(data3)
l1=l1+length(data3)
}
##file1=paste("00",x,".csv",sep="")
#data<-read.csv(file1)
#data2<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
#m<-mean(data3)
#print(m)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
print(pollutant)
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
mean=s1/l1
print(mean-0.026979)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
s1=0.00
l1=0
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data2<-data[rm, ][ , ]
data3<-data2[ ,pollutant]
s1=s1+sum(data3)
l1=l1+length(data3)
}
##file1=paste("00",x,".csv",sep="")
#data<-read.csv(file1)
#data2<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
#m<-mean(data3)
#print(m)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
print(pollutant)
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
mean=s1/l1
print(mean-0.026979)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
s1=0.00
l1=0
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data2<-data[rm, ][ , ]
data3<-data2[ ,pollutant]
s1=s1+sum(data3)
l1=l1+length(data3)
}
##file1=paste("00",x,".csv",sep="")
#data<-read.csv(file1)
#data2<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
#m<-mean(data3)
#print(m)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
print(pollutant)
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
mean=s1/l1
print(mean-0.026979)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
s1=0.00
l1=0
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data2<-data[rm, ][ , ]
data3<-data2[ ,pollutant]
s1=s1+sum(data3)
l1=l1+length(data3)
}
##file1=paste("00",x,".csv",sep="")
#data<-read.csv(file1)
#data2<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
#m<-mean(data3)
#print(m)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
print(pollutant)
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
mean=s1/l1
print(mean-0.026979)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
print(directory)
print(id)
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data3<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
l1=0
l1=l1+nrow(data3)
if(x==min(id))
df1<-c(x,l1)
else{
df2<-c(x,l1)
df1<-rbind.data.frame(df1,df2)
}
}
#   df1<-c(54,219)
df1<-setNames(df1,c("id","nobs"))
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
#    print(df1)
#    df2<-data.frame(df1)
#    print(class(df2))
#
#   print("hello")
#   print(df2)
#df3<-data.frame(id="54",nobs="219")
#df3
df1
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc,nobs)
cc <- complete("specdata", 54)
print(cc, 219)
cc <- complete("specdata", 54)
print(cc)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
id<-1:332
cr<-c()
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data3<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
l1=0
l1=nrow(data3)
if(l1>threshold)
{
cr1<-cor(data3[ ,"sulfate"],data3[ ,"nitrate"])
cr<-append(cr,cr1)
}
}
if(is.null(cr))
cr<-vector(mode="numeric", length=0)
cr
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
print(directory)
print(id)
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data3<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
l1=0
l1=l1+nrow(data3)
if(x==min(id))
df1<-c(x,l1)
else{
df2<-c(x,l1)
df1<-rbind.data.frame(df1,df2)
}
}
#   df1<-c(54,219)
df1<-setNames(df1,c("id","nobs"))
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
#    print(df1)
#    df2<-data.frame(df1)
#    print(class(df2))
#
#   print("hello")
#   print(df2)
#df3<-data.frame(id="54",nobs="219")
#df3
df1
}
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
id<-1:332
cr<-c()
for(x in id){
if(x<10)
file1=paste("00",x,".csv",sep="")
else if(x>=10 && x<=99)
file1=paste("0",x,".csv",sep="")
else if(x>99 && x<=332)
file1=paste(x,".csv",sep="")
#print(file1)
data<-read.csv(file1)
rm<-complete.cases(data)
data3<-data[rm, ][ , ]
#data3<-data2[ ,pollutant]
l1=0
l1=nrow(data3)
if(l1>threshold)
{
cr1<-cor(data3[ ,"sulfate"],data3[ ,"nitrate"])
cr<-append(cr,cr1)
}
}
if(is.null(cr))
cr<-vector(mode="numeric", length=0)
cr
}
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
